class Solution(object):
    def evalRPN(self, tokens):
        from collections import deque
        stack = deque()
        operators = ["+", "/", "-","*"]    
        for a in range(0, len(tokens)):
            if tokens[a] not in operators:
                stack.append(tokens[a])
            if tokens[a] in operators:
                y = stack.pop()
                z = stack.pop()
                fin = 0
                if tokens[a] == "+":
                    fin = int(z) + int(y)
                    stack.append(fin)
                elif tokens[a] == "*":
                    fin = int(z) * int(y)
                    stack.append(fin)
                elif tokens[a] == "-":
                    fin = int(z) - int(y)
                    stack.append(fin)
                elif tokens[a] == "/":
                    fin = int(z) / int(y)
                    stack.append(fin)

        return int(stack.pop())
